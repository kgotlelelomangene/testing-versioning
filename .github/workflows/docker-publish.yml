name: Docker

on:
  push:
    branches: [ "version-testing" ]
    #tags: [ 'v*.*.*' ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  BASE_IMAGE: python:3.7.16-slim-buster
  DOCKER_TOKEN: ${{secrets.DOCKER_TOKEN}}

#   FROM python:3.7.16-slim-buster
# # base file
# RUN apt-get update && \
#     apt-get install gcc libc-dev g++ libffi-dev libxml2 unixodbc-dev -y
# RUN python -m pip install --upgrade pip

# RUN groupadd -r appuser && useradd -g appuser appuser

# USER appuser

# ENV PATH="/home/appuser/.local/bin:${PATH}"

# WORKDIR /home/appuser

# # python postgresql
# USER root

# RUN apt-get update && apt-get install odbc-postgresql -y
# RUN python -m pip install --upgrade pip
# RUN pip install psycopg2-binary==2.9.5

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      issues: read

    steps:
      # - name: login test
      #   run: |
      #     export CR_PAT=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
      #     docker login ghcr.io -u kgotlelelo1 --password-stdin
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 #f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0
        

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3 #343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: kgotlelelo1
          password: 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

      - name: download base image
        run: | 
          echo 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 | docker login ghcr.io -u kgotlelelo1 --password-stdin | docker pull ghcr.io/bbdsoftware/vanguard/base-python:0.0.1-slim
            

     # echo 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 | docker login ghcr.io -u kgotlelelo1 --password-stdin
      # - name: Log into registry ${{ env.REGISTRY }}
      #   uses: docker/login-action@v3 #343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
      #   with:
      #     registry: ghcr.io
      #     username: kgotlelelo1
      #     password: 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
          
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5 #96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5 #0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with: 
          context: ./app_service
          file: ./app_service/docker/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          build-args: |
            BASE_IMAGE=${{ env.BASE_IMAGE }}
            IMAGE_NAME=${{ env.IMAGE_NAME }}
            DOCKER_TOKEN=${{ env.DOCKER_TOKEN}}
            
          tags: ghcr.io/kgotlelelomangene/thought_machine:v0.3
          cache-from: type=gha
          cache-to: type=gha,mode=max
        
        

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      # - name: Sign the published Docker image
      #   if: ${{ github.event_name != 'pull_request' }}
      #   env:
      #     # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
      #     TAGS: ${{ steps.meta.outputs.tags }}
      #     DIGEST: ${{ steps.build-and-push.outputs.digest }}
      #   # This step uses the identity token to provision an ephemeral certificate
      #   # against the sigstore community Fulcio instance.
      #   run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
